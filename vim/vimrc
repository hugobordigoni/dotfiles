set nocompatible
filetype off

" Vundle
set rtp+=$HOME/.dotfiles/vim/bundle/Vundle.vim
call vundle#begin('~/.dotfiles/vim/bundle')
Plugin 'gmarik/Vundle.vim'
Plugin 'tmhedberg/SimpylFold'
Plugin 'vim-scripts/indentpython.vim'
Bundle 'Valloric/YouCompleteMe'
Plugin 'scrooloose/syntastic'
Plugin 'nvie/vim-flake8'
Plugin 'altercation/vim-colors-solarized'
Plugin 'scrooloose/nerdtree'
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'kien/ctrlp.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
Plugin 'JamshedVesuna/vim-markdown-preview'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'leafgarland/typescript-vim'
Plugin 'davidhalter/jedi-vim'
Plugin 'avakhov/vim-yaml'
Plugin 'chase/vim-ansible-yaml'
Plugin 'ekalinin/Dockerfile.vim'
call vundle#end()

" Change Leader
let mapleader = ','

" Enable scrolling
set mouse=a

" Split Navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Normal behaviour of backspace (not necessary on all systems)
set backspace=indent,eol,start

" Add number
set number

" NerdTree at opening of dir
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif
" Toggle NERDTree on and off
nnoremap <C-n> :NERDTreeToggle <CR> 

" Enable folding
set foldmethod=indent
set foldlevel=99
nnoremap <space> za

" Default indent
set tabstop=4
set softtabstop=4
set shiftwidth=4

" Python PEP8 indent
au BufNewFile,BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=120 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix

" Ansible syntax highlighting
au BufRead,BufNewFile */ansible/*.yml,*/ansible/*.yaml set filetype=ansible

" Web indent
au BufNewFile,BufRead *.ts,*.js,*.html,*.css
    \ set tabstop=2 |
    \ set softtabstop=2 |
    \ set shiftwidth=2 |
    \ set expandtab

" Text File noexpandtab
au BufNewFile,BufRead *.txt,*.csv
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
	\ set noexpandtab

" Unnecessary Whitespace
highlight BadWhitespace ctermbg=red guibg=red
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/

" Encoding
set encoding=utf-8

" YouCompleteMe
let g:ycm_autoclose_preview_window_after_completion=1

" Jedi-vim (included in YCM but needed for parameters completion)
let g:jedi#auto_vim_configuration = 0
let g:jedi#popup_on_dot = 0
let g:jedi#popup_select_first = 0
let g:jedi#completions_enabled = 0
let g:jedi#completions_command = ""
let g:jedi#show_call_signatures = "1"
let g:jedi#show_call_signatures_delay = 0
let g:jedi#goto_definitions_command = "<leader>g"
let g:jedi#documentation_command = "<leader>d"
let g:jedi#usages_command = "<leader>n"
let g:jedi#rename_command = "<leader>r"

" python with virtualenv support
py << EOF
import os
import sys
if 'VIRTUAL_ENV' in os.environ:
	project_base_dir = os.environ['VIRTUAL_ENV']
	activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
	execfile(activate_this, dict(__file__=activate_this))
EOF

" Hide .pyc
let NERDTreeIgnore=['\.pyc$', '\~$']

" Add Color highlighting
filetype plugin indent on
let python_highlight_all=1
syntax on

set t_Co=256
let g:solarized_termtrans = 1
set background=dark
colorscheme solarized

" System clipboard
set clipboard=unnamed

" Markdown
let vim_markdown_preview_github=1
